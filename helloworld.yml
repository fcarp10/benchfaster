- name: Hello-world test
  hosts: testers
  tasks:
    - name: Set global vars
      ansible.builtin.set_fact:
        date: "{{ lookup('pipe', 'date +%-d-%-m-%Y_%H-%M-%S') }}"
        toolkit_dir: "{{ playbook_dir }}/deployment_toolkit"
        headnode: "{{ hostvars[groups.machines[0]] }}" 

    - name: Create results directory
      ansible.builtin.file:
        path: "{{ playbook_dir }}/_results/{{ date }}"
        state: directory
      register: results_path

# - name: Install machine requirements
#   ansible.builtin.import_playbook: "requirements/machine.yml"
#   when: hvm is not defined

# - name: Install hypervisor requirements
#   ansible.builtin.import_playbook: "requirements/hypervisor.yml"
#   when: hvm

- name: Install tester requirements
  ansible.builtin.import_playbook: "requirements/tester.yml"

- name: Deploy BenchFaster
  ansible.builtin.import_playbook: "deployment_toolkit/main.yml"
  vars:
    headnode: "{{ hostvars.headnode }}"
  when: hvm is not defined

- name: Deploy BenchFaster in hypervisor 
  ansible.builtin.import_playbook: "deployment_toolkit/main_hv.yml"
  vars:
    headnode: "{{ hostvars.headnode }}"
  when: hvm

- name: Run helloworld benchmarks 
  hosts: testers
  tasks:

    - name: Run test with JMeter
      ansible.builtin.shell: |
        jmeter -n -t {{ playbook_dir }}/performance_tests/helloworld/helloworld_test.jmx \ 
          -Jrequest.ip={{ address_benchmark }} \
          -Jrequest.port={{ openfaas.openfaas_port }} \
          -Jtest.iterations=100 \
          -l {{ results_path.path }}/results_jmeter.csv

    - name: Run test with K6
      ansible.builtin.shell: |
        k6 run {{ playbook_dir }}/performance_tests/helloworld/helloworld_test.js \
          -e HOST={{ address_benchmark }} \
          -e PORT={{ openfaas.openfaas_port }} \
          --iterations 100 \
          -o csv={{ results_path.path }}/results_k6.csv

