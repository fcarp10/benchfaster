# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative 'environment.rb'
include Variables

$k3s_headnode_install = <<-HEADNODE
  curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=$1 INSTALL_K3S_EXEC="--advertise-address 192.168.50.99 \
          --flannel-iface nebula \
          --kube-apiserver-arg "enable-admission-plugins=PodNodeSelector"" sh -
HEADNODE

$k3s_worker_install = <<-SCRIPT
  export K3S_RESOLV_CONF=/run/systemd/resolve/resolv.conf
  echo "export K3S_RESOLV_CONF=/run/systemd/resolve/resolv.conf" >> /home/vagrant/.bashrc
  echo "vm.max_map_count=262144" >> vm.conf
  sudo mv vm.conf /etc/sysctl.d/
  sleep 10
  curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=$1 K3S_URL=https://192.168.50.99:6443 \
  K3S_TOKEN=$(cat /vagrant/benchfaster/node-token) \
  INSTALL_K3S_EXEC="--flannel-iface nebula" sh -
SCRIPT

ENV['VAGRANT_NO_PARALLEL'] = 'yes'
Vagrant.configure("2") do |config|

  config.vm.define "headnode", primary: true do |headnode|
    headnode.vm.box = $VM_IMAGE
    headnode.vm.hostname = "headnode"
    headnode.vm.network "public_network", bridge: $INTERFACE, dev: $INTERFACE, ip: $ADDRESS_BENCHMARK
    headnode.vm.synced_folder "../../..", "/vagrant", type: "nfs", nfs_udp: false
    headnode.vm.provider $VAGRANT_PROVIDER do |hn|
      hn.memory = "#{$VM_MEM}"
      hn.cpus = "#{$VM_CPU}"
    end
    headnode.vm.provision :shell, inline: "DEBIAN_FRONTEND=noninteractive apt update"
    headnode.vm.provision :shell, path: "../nebula/nebula_install.sh", args: [$NEBULA_VERSION, "/vagrant", "amd64", "lighthouse", "eth1"]
    headnode.vm.provision :shell, inline: "echo 'set bell-style none' >> /etc/inputrc && echo 'set visualbell' >> /home/vagrant/.vimrc"
    # headnode.vm.provision :shell, inline: "chmod +x /vagrant/deployment_toolkit/container_registry/repo_set.sh"
    # headnode.vm.provision :shell, inline: "/vagrant/deployment_toolkit/container_registry/repo_set.sh install_repo_vagrant #{$REPO_NAME} #{$REPO_PORT} #{$REPO_IP}"
    headnode.vm.provision "shell", run: "always", inline: $k3s_headnode_install, args: $K3S_VERSION
    headnode.vm.provision :shell, inline: "cp /var/lib/rancher/k3s/server/node-token /vagrant/benchfaster/node-token"
    headnode.vm.provision :shell, inline: "chmod 777 /vagrant/benchfaster/node-token"
  end

  (1..$NUM_WORKERS).each do |i|
    config.vm.define "worker#{i}" do |worker|
      worker.vm.box = $VM_IMAGE
      worker.vm.hostname = "worker#{i}"
      worker.vm.network "public_network", bridge: $INTERFACE, dev: $INTERFACE, use_dhcp_assigned_default_route: true
      worker.vm.synced_folder "../../..", "/vagrant", type: "nfs", nfs_udp: false
      worker.vm.provider $VAGRANT_PROVIDER do |wn|
        wn.memory = "#{$VM_MEM}"
        wn.cpus = "#{$VM_CPU}"
      end
      worker.vm.provision :shell, inline: "DEBIAN_FRONTEND=noninteractive apt update"
      worker.vm.provision :shell, path: "../nebula/nebula_install.sh", args: [$NEBULA_VERSION, "/vagrant", "amd64", "worker#{i}"]
      worker.vm.provision :shell, inline: "echo 'set bell-style none' >> /etc/inputrc && echo 'set visualbell' >> /home/vagrant/.vimrc"
      # worker.vm.provision :shell, inline: "/vagrant/deployment_toolkit/container_registry/repo_set.sh install_repo_vagrant #{$REPO_NAME} #{$REPO_PORT} #{$REPO_IP}"
      worker.vm.provision :shell, inline: $k3s_worker_install, args: $K3S_VERSION
    end
  end

  unless 0 == $DELAY_INTRA
    config.vm.provision :shell, inline: "tc qdisc add dev eth1 root netem delay #{$DELAY_INTRA}ms \"#{$VARIANCE_INTRA}\"ms distribution normal loss \"#{$LOSS_INTRA}\"%"
  end
end
