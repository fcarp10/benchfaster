- name: Install Nebula lighthouse on headnode
  ansible.builtin.shell: |
    echo "Installing Nebula lighthouse..." >> {{ results_path.path }}/logs.txt
    ssh -n {{ headnode.ansible_user }}@{{ headnode.ansible_host }} \
      "/home/{{ headnode.ansible_user }}/benchfaster/deployment_toolkit/nebula/nebula_install.sh \
      {{ nebula.nebula_version }} \
      /home/{{ headnode.ansible_user }} \
      {{ headnode.arch }} \
      lighthouse \
      {{ headnode.interface }}"
  args:
    executable: /bin/bash

- name: Retrieve lighthouse IP file from headnode
  ansible.builtin.command: ssh -n {{ headnode.ansible_user }}@{{ headnode.ansible_host }} "sudo cat /home/{{ headnode.ansible_user }}/benchfaster/lighthouse.ip"
  register: lighthouse_ip

- name: Copy lighthouse IP file to all workers
  ansible.builtin.shell: |
    echo {{ lighthouse_ip.stdout }} | \
    ssh {{ hostvars[groups.machines[worker_item]].ansible_user }}@{{ hostvars[groups.machines[worker_item]].ansible_host }} \
    "cat > /home/{{hostvars[groups.machines[worker_item]].ansible_user}}/benchfaster/lighthouse.ip"
  loop: "{{ range(0, groups.machines|length, 1)|list }}"
  loop_control:
    loop_var: worker_item
  when: hostvars[groups.machines[worker_item]].headnode is not defined

- name: Install Nebula on workers
  ansible.builtin.shell: |
    echo "Installing Nebula client..." >> {{ results_path.path }}/logs.txt
    ssh -n {{ hostvars[groups.machines[worker_item]].ansible_user }}@{{ hostvars[groups.machines[worker_item]].ansible_host }} \
      "/home/{{ hostvars[groups.machines[worker_item]].ansible_user }}/benchfaster/deployment_toolkit/nebula/nebula_install.sh \
      {{ nebula.nebula_version }} \
      /home/{{ hostvars[groups.machines[worker_item]].ansible_user }} \
      {{ hostvars[groups.machines[worker_item]].arch }} \
      worker{{ worker_item }}"
  args:
    executable: /bin/bash
  loop: "{{ range(0, groups.machines|length, 1)|list }}"
  loop_control:
    loop_var: worker_item
  when: hostvars[groups.machines[worker_item]].headnode is not defined
