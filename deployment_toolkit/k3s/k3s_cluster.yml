- name: Deploy K3s on headnode
  ansible.builtin.shell: |
    sh {{ toolkit_dir }}/main.sh \
      --opt k3s \
      --address {{ headnode.ansible_host }} \
      --user root \ 
      --workpath /home/{{ headnode.ansible_user }}/ \ 
      --headnode {{ headnode.headnode }} \
      --interface {{ headnode.interface }} \
      --num-workers {{ headnode.num_workers }} \
      --k3s-version {{ headnode.k3s_version }} \ 
      >> {{ results_path.path }}/logs.txt
  args:
    executable: /bin/bash

- name: Retrieve token from k3s server
  ansible.builtin.command: ssh -n {{ headnode.ansible_user }}@{{ headnode.ansible_host }} "sudo cat /var/lib/rancher/k3s/server/node-token"
  register: k3s_token

- name: Deploy K3s on worker nodes
  ansible.builtin.shell: |
    sh {{ toolkit_dir }}/main.sh \
      --opt k3s \
      --address {{ hostvars[groups.machines[item]].ansible_host }} \
      --user root \ 
      --workpath /home/{{ hostvars[groups.machines[item]].ansible_user }}/ \ 
      --interface {{ hostvars[groups.machines[item]].interface }} \
      --k3s-port {{ hostvars[groups.machines[item]].k3s_port }} \ 
      --k3s-version {{ hostvars[groups.machines[item]].k3s_version }} \ 
      --k3s-token {{ k3s_token.stdout }} \
      >> {{ results_path.path }}/logs.txt
  args:
    executable: /bin/bash
  loop: "{{ range(0, groups.machines|length, 1)|list }}"
  when: hostvars[groups.machines[item]].headnode is not defined

- name: Wait for K3s workers to join 
  ansible.builtin.shell: |
      echo "Waiting for all nodes to join the cluster..." >> {{ results_path.path }}/logs.txt
      ACTIVENODES=1
      until [[ $(($ACTIVENODES-1)) -eq {{ headnode.num_workers|int }} ]]; do
          echo -n "." >> {{ results_path.path }}/logs.txt
          ACTIVENODES=$(ssh -n root@{{ headnode.ansible_host }} "sudo kubectl get nodes -o json|jq -r '.items[]|select(.status.conditions[].type==\"Ready\")|select(.spec.taints|not).metadata.name' | wc -l")
          sleep 1
      done
      echo " all nodes joined!" >> {{ results_path.path }}/logs.txt
